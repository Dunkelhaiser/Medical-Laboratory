generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String? 
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    firstName     String
    lastName      String
    email         String    @unique
    phone         String    @unique
    emailVerified DateTime?
    password      String
    accounts      Account[]
    sessions      Session[]
    cart          Cart[]
    tokens        VerificationToken[]
}

model VerificationToken {
    id         String   @id @default(cuid())
    token      String   @unique
    user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId      String
}

model Service {
    id              String   @id @default(cuid())
    name            String
    description     String
    descriptionFull String
    price           Float
    duration        Int
    researches      String[]
    materials       String[]
    preparations    String[]
    cart            Cart[]
}

model Cart {
    id          String   @id @default(cuid())
    userId      String
    user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    services    Service[]
}
